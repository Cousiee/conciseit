---
import { Icon } from "astro-icon/components";
import type { Item } from "~/types";

export interface Props {
  items?: Array<Item>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], classes = {}, defaultIcon } = Astro.props as Props;

const {
    container: containerClass = "",
    panel: panelClass = "",
    title: titleClass = "",
    description: descriptionClass = "",
    icon: defaultIconClass = "text-primary dark:text-slate-200 border-primary dark:border-blue-700",
} = classes;
---

{
    items && items.length && (
        <div className={containerClass}>
            {items.map(
                (
                    { title, description, icon, classes: itemClasses = {} },
                    index = 0,
                ) => (
                    <div className={[panelClass, itemClasses?.panel]}>
                        <div className="flex flex-col items-center mr-4 rtl:mr-0 rtl:ml-4">
                            <div>
                                <div className="flex items-center justify-center">
                                    {(icon || defaultIcon) && (
                                        <Icon
                                            name={icon || defaultIcon}
                                            class={[
                                                defaultIconClass,
                                                itemClasses?.icon,
                                            ]}
                                        />
                                    )}
                                </div>
                            </div>
                            {index !== items.length - 1 && (
                                <div className="w-px h-full bg-black/10 dark:bg-slate-400/50" />
                            )}
                        </div>
                        <div
                            className={`pt-1 ${
                                index !== items.length - 1 ? "pb-8" : ""
                            }`}
                        >
                            {title && (
                                <p
                                    className={[
                                        titleClass,
                                        itemClasses?.title,
                                    ]}
                                    set:html={title}
                                />
                            )}
                            {description && (
                                <p
                                    className={[
                                        descriptionClass,
                                        itemClasses?.description,
                                    ]}
                                    set:html={description}
                                />
                            )}
                        </div>
                    </div>
                ),
            )}
        </div>
    )
}
